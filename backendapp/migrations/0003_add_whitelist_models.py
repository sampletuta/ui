# Generated by Django 4.2.23 on 2025-09-11 19:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('backendapp', '0002_alter_customuser_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Targets_whitelist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('person_name', models.CharField(help_text='Name of the authorized person', max_length=100)),
                ('employee_id', models.CharField(blank=True, help_text='Employee ID or badge number', max_length=50, null=True)),
                ('department', models.CharField(blank=True, help_text='Department or division', max_length=100, null=True)),
                ('position', models.CharField(blank=True, help_text='Job position or title', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('person_text', models.TextField(blank=True, help_text='Additional notes about the person', null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('access_level', models.CharField(choices=[('basic', 'Basic Access'), ('standard', 'Standard Access'), ('premium', 'Premium Access'), ('admin', 'Administrative Access'), ('vip', 'VIP Access')], default='standard', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('revoked', 'Revoked')], default='active', max_length=20)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='other', max_length=20)),
                ('valid_from', models.DateTimeField(blank=True, help_text='Access valid from this date', null=True)),
                ('valid_until', models.DateTimeField(blank=True, help_text='Access expires on this date', null=True)),
                ('clearance_level', models.CharField(blank=True, help_text='Security clearance level', max_length=50, null=True)),
                ('authorized_areas', models.JSONField(blank=True, default=list, help_text='List of authorized areas/zones')),
                ('last_verified', models.DateTimeField(blank=True, help_text='Last time access was verified', null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='whitelist_approved', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='whitelist_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Whitelist Entry',
                'verbose_name_plural': 'Whitelist Entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhitelistPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='whitelist_photos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('face_confidence', models.FloatField(blank=True, help_text='Face detection confidence score', null=True)),
                ('image_quality', models.CharField(blank=True, help_text='Image quality assessment', max_length=20, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='backendapp.targets_whitelist')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whitelist_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
